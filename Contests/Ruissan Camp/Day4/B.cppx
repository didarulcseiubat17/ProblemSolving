#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>

#define fo(i,n) for(int i=0; i<n; i++)
#define foo(i,m,n) for(int i=m; i<n; i++)
#define foe(i,m,n) for(int i=m; i<=n; i++)
#define be(n) n.begin(),n.end()
#define rbe(n) n.rbegin(),n.rend()
#define mp(a,b) make_pair(a,b)
#define pii pair<int,int>
#define vi vector<int>
#define vs vector<string>
#define sstr stringstream
typedef long long ll;
using namespace std;

const int MAX = 300;
vector<int> adjlst[MAX];
int N, man[MAX], woman[MAX];
bool visited[MAX];
bool match(int manIndex) {
	for (int i = 0; i < adjlst[manIndex].size(); i++) {
		int curwoman = adjlst[manIndex][i];
		if (visited[curwoman])
			continue;
		visited[curwoman] = true;
		if (woman[curwoman] == -1 || match(woman[curwoman])) {
			man[manIndex] = curwoman;
			woman[curwoman] = manIndex;
			return true;
		}
	}
	return false;
}
int maxMatch() {
	int cnt = 0;
	memset(man, -1, sizeof man);
	memset(woman, -1, sizeof woman);
	for (int i = 1; i <= N; i++)
		if (man[i] == -1) {
			memset(visited, 0, sizeof visited);
			if (match(i))
				cnt++;
		}
	return cnt;
}

int main() {

	freopen("pairs.in", "r", stdin);
	freopen("pairs.out", "w", stdout);

	int m;
	cin >> N >> m;

	foe(i,1,N) {
		while (cin >> m && m)
			adjlst[i].push_back(m);
	}

	cout<<maxMatch()<<endl;
	foe(i,1,N)
	{
		if(man[i]!=-1)
			cout<<i<<" "<<man[i]<<endl;
	}
	return 0;
}
