#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>

#define fo(i,n) for(int i=0; i<n; i++)
#define foo(i,m,n) for(int i=m; i<n; i++)
#define foe(i,m,n) for(int i=m; i<=n; i++)
#define sz(a) ((int)(a).size())
#define be(n) n.begin(),n.end()
#define rbe(n) n.rbegin(),n.rend()
#define mp(a,b) make_pair(a,b)
#define pii pair<int,int>
#define vi vector<int>
#define vs vector<string>
#define sstr stringstream
typedef long long ll;
using namespace std;
string str;

pair<int, int> meetInMiddle(vector<pair<char, pair<int, int> > > &v) {

}

int main() {

	while (getline(cin, str)) {
		stack<pair<char, pair<int, int> > > s;
		string temp = "";
		for (int i = 0; i < sz(str); i++)
			if (str[i] != ' ')
				temp += str[i];
		str = temp;
		for (int i = 0; i < sz(str); i++) {
			switch (str[i]) {
			case '~':
				if (str[i + 1] == '(') {
					s.push(make_pair('-', make_pair(0, 0)));
					i++;
				}
				break;
			case '(':
				s.push(make_pair('(', make_pair(0, 0)));
				break;
			case '&':
				s.push(make_pair('&', make_pair(0, 0)));
				break;
			case '|':
				s.push(make_pair('|', make_pair(0, 0)));
				break;
			case ')': {
				vector<pair<char, pair<int, int> > > v;
				while (s.top().first != '(' || s.top().first != '-') {
					v.push_back(s.top());
					s.pop();
				}
				bool r = s.top().first == '-';
				s.pop();
				pair<char,pair<int,int> > nw = meetInMiddle(v);
				if(r)swap(nw.second.first,nw.second.second);
			}
			default:
				s.push(make_pair(str[i], make_pair(1, 1)));

			}

		}


	}

	return 0;
}
