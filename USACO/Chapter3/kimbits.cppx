/*
 ID: tito_911
 PROG: kimbits
 LANG: C++
 /*
 *	E-Mail : khaled.samy@fci-cu.edu.eg
 *	TopCoder Handle : Khaled91
 *	Another buggy code by Khaled Samy ;)
 */
#include <cstring>
#include <string.h>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <fstream>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
using namespace std;
#define PB                      push_back
#define MP                      make_pair
#define ALL(v)                  v.begin(),v.end()
#define CLR(v, d)               memset(v, d, sizeof(v))
#define loop(i,n) 		        for(int i=0;i<(int)n;i++)
#define loop2(i,n,m)            for(int i=n;i<(int)(m);i++)

typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vi> vvi;
typedef vector<vd> vvd;
typedef vector<string> vs;
typedef long long ll;
typedef stringstream SS;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

const int OO = (int) 2e9;
const double PI = 2 * acos(0);
const double EPS = 1e-9;

int dcmp(double a, double b) {
	return fabs(a - b) <= EPS ? 0 : a > b ? 1 : 2;
}

int DI[] = { -1, 0, 1, 0, 1, -1, -1, 1 };
int DJ[] = { 0, 1, 0, -1, 1, -1, 1, -1 };

ll dp[32][32];

ll f(int n, int l) {
	if (n <= l)
		return (1ll << n);

	if (l == 0)
		return 1;

	if (dp[n][l] != -1)
		return dp[n][l];

	return dp[n][l] = f(n - 1, l) + f(n - 1, l - 1);
}
int main() {
	freopen("kimbits.in", "rt", stdin);
	freopen("kimbits.out", "wt", stdout);

	int n, l;
	ll I;
	cin >> n >> l >> I;
	CLR(dp,-1);
	I--;
	for (int i = n; i > 0; i--) {
		ll tmp;
		if ((tmp = f(i - 1, l)) <= I) {
			cout << 1;
			I -= tmp, l--;
		} else
			cout << 0;
	}
	cout << endl;
	return 0;
}
